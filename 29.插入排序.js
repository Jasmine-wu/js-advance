// 插入排序：适合小规模数据和部分已排序数据
// 插入排序的核心思想是，将数组分为两部分：已排序部分和未排序部分。在每一步中，从未排序部分取出一个元素（当前元素 current），然后将它插入到已排序部分的正确位置。
// 从第一个元素开始，该元素可以认为已经被排序。
// 取出下一个元素，在已经排序的元素序列中从后向前扫描。
// 如果该元素（已排序）大于新元素，将该元素移到下一位置。
// 重复步骤 3，直到找到已排序的元素小于或等于新元素的位置。
// 将新元素插入到该位置后。
// 重复步骤 2~5，直到整个数组排序完成。
const insertSort = function (arr) {
  // 从第二个元素开始，遍历未排序序列
  for (let i = 1; i < arr.length; i++) {
    // 取出当前未排序的元素
    const current = arr[i];
    // 从后到前遍历已排序序列
    let j = i - 1;
    // 找到当前元素应该要插入的位置j
    while (j >= 0 && arr[j] > current) {
      // 当前已排序元素 大于 当前未排序元素时, 将当前已排序元素后移一位
      arr[j + 1] = arr[j];
      // 继续往前遍历
      j--;
    }
    // 在空出来的j位置插入当前未排序元素
    arr[j + 1] = current;
  }
  return arr;
};

// 测试插入排序
let testArray = [5, 3, 8, 6, 2, 7, 1, 4];
console.log("原始数组:", testArray);
console.log("排序后数组:", insertSort(testArray));
